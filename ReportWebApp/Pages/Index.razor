@page "/"

 <PageTitle>Index</PageTitle>

<div class="container">
    <div class="form-card">
        <h2>📊 Generate Report</h2>

        <EditForm Model="@InputModel" OnValidSubmit="GenerateReport">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="client">Client</label>
                <InputSelect id="client" @bind-Value="InputModel.ClientId" class="form-control">
                    <option value="">-- Select Client --</option>
                    @foreach (var client in Clients)
                    {
                        <option value="@client.Id">@client.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label>Date Range</label>
                <div class="date-range">
                    <InputDate @bind-Value="InputModel.FromDate" class="form-control" />
                    <span class="date-separator">to</span>
                    <InputDate @bind-Value="InputModel.ToDate" class="form-control" />
                </div>
            </div>

            <div class="form-group">
                <label for="reportType">Report Type</label>
                <InputSelect id="reportType" @bind-Value="InputModel.ReportType" class="form-control">
                    <option value="">-- Select Report Type --</option>
                    <option value="SMS">SMS</option>
                    <option value="Email">Email</option>
                    <option value="Dialer">Dialer</option>
                </InputSelect>
            </div>

            <button type="submit" class="submit-button">Generate</button>
        </EditForm>
    </div>

    @if (ReportResults?.Any() == true)
    {
        <div class="table-card">
            <h3>📋 Report Results</h3>
            <table id="reportTable" class="report-table">
                <thead>
                    <tr>
                        <th onclick="sortTable(0, this)">Date <span class="sort-arrow"></span></th>
                        <th onclick="sortTable(1, this)">Message <span class="sort-arrow"></span></th>
                        <th onclick="sortTable(2, this)">Status <span class="sort-arrow"></span></th>
                    </tr>
                    <tr>
                        <th><input type="text" onkeyup="filterTable(0)" placeholder="Search Date" /></th>
                        <th><input type="text" onkeyup="filterTable(1)" placeholder="Search Message" /></th>
                        <th><input type="text" onkeyup="filterTable(2)" placeholder="Search Status" /></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ReportResults)
                    {
                        <tr>
                            <td>@item.DateSent.ToShortDateString()</td>
                            <td>@item.Message</td>
                            <td>@item.Status</td>
                        </tr>
                    }
                </tbody>
            </table>

            <script>
                let currentSort = { column: -1, direction: 'asc' };

                function sortTable(colIndex, thElement) {
                    const table = document.getElementById("reportTable");
                    const tbody = table.tBodies[0];
                    const rows = Array.from(tbody.rows);

                    let direction = 'asc';

                    // If same column, toggle direction
                    if (currentSort.column === colIndex) {
                        direction = currentSort.direction === 'asc' ? 'desc' : 'asc';
                    }

                    currentSort = { column: colIndex, direction };

                    // Sort rows
                    rows.sort((a, b) => {
                        const x = a.cells[colIndex].textContent.trim().toLowerCase();
                        const y = b.cells[colIndex].textContent.trim().toLowerCase();

                        if (x < y) return direction === 'asc' ? -1 : 1;
                        if (x > y) return direction === 'asc' ? 1 : -1;
                        return 0;
                    });

                    // Re-append rows in sorted order
                    rows.forEach(row => tbody.appendChild(row));

                    // Update visual sort indicators
                    document.querySelectorAll("th .sort-arrow").forEach(span => span.textContent = '');
                    const arrowSpan = thElement.querySelector(".sort-arrow");
                    arrowSpan.textContent = direction === 'asc' ? '▲' : '▼';
                }

                function filterTable(colIndex) {
                    const input = document.querySelectorAll("thead input")[colIndex];
                    const filter = input.value.toLowerCase();
                    const table = document.getElementById("reportTable");
                    const tbody = table.tBodies[0];
                    const rows = tbody.getElementsByTagName("tr");

                    for (let row of rows) {
                        const td = row.getElementsByTagName("td")[colIndex];
                        if (td) {
                            const text = td.textContent || td.innerText;
                            row.style.display = text.toLowerCase().includes(filter) ? "" : "none";
                        }
                    }
                }
            </script>
        
        </div>
    }
</div>